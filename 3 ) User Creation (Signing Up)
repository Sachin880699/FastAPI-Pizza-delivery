pip3 install werkzeug



+++++++++++++++++++++ schemas.py +++++++++++++++

from pydantic import BaseModel
from typing import Optional

class SignUpModel(BaseModel):
    id:Optional[int]
    username:str
    email:str
    password:str
    is_staff:Optional[bool]
    is_active:Optional[bool]

    class Config:
        orm_mode = True
        schema_extra = {
            "example":{
                "username":"sachin",
                "email":"sachin@gmail.com",
                "password":"password",
                "is_staff":False,
                "is_active":True,
            }
        }
        
+++++++++++++++++++++++ auth_routes.py +++++++++++++++

from database import  Session , engine # this one
from schemas import SignUpModel # this one
from models import  User # this one
from fastapi.exceptions import HTTPException # this one
from werkzeug.security import generate_password_hash , check_password_hash # this is for password


@auth_router.post('/signup',status_code=status.HTTP_201_CREATED)
async def signup(user: SignUpModel):
    db_email = session.query(User).filter(User.email == user.email).first()
    if db_email is not None:
        return HTTPException(status_code=status.HTTP_400_BAD_REQUEST,
                             detail="User with the email already exists"
                             )
    db_username = session.query(User).filter(User.username == user.username).first()
    if db_username is not None:
        return HTTPException(status_code=status.HTTP_400_BAD_REQUEST,
                             detail="User with the username already exists"
                             )
    new_user = User(
        username=user.username,
        email=user.email,
        password=generate_password_hash(user.password),
        is_active=user.is_active,
        is_staff=user.is_staff
    )
    session.add(new_user)
    session.commit()
    return new_user
